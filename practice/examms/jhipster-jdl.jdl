
entity University {
	name String required,
    code String
}
entity College {
	name String required,
    code String
}

entity Course {
	name String required,
    code String,
    detals String
}


entity Branch {
	name String,
    code String
}

entity AcademicBatch {
	name String required,
    code String,
    academicStartYear Integer required,
    academicEndYear Integer required
}

entity Session {
	name String required,
    code String,
    startDate LocalDate,
    endDate LocalDate
}

entity Student {
	regNumber String unique,
    firstName String required,
    middleName String,
    lastName String required,
	dob Instant,
    fatherName String,
    motherName String,    
    email String required unique,
    mobileNumber String required,
    nationality String required,
    gender Gender,
    religion String,
    catagory String,
    maritialStatus MaritialStatus,
    adharNumber String required unique,
    bloodGroup BloodGroup,
    fatherMobileNumber String,
    fatherEmailId String,
    image ImageBlob minbytes(20) maxbytes(300),
    signature ImageBlob minbytes(20) maxbytes(300),
    adhar Blob minbytes(20) maxbytes(300),
    
}

enum Gender {
    MALE (Male), FEMALE (Female), OTHER(Other)
}
 
 enum MaritialStatus {
 MARRIED (Married), UNMARRIED (Unmarried) 
 }
 
enum BloodGroup {
O_POS ("O+"),
O_NEG ("O-"),
A_POS ("A+"),
A_NEG ("A-"),
B_POS ("B+"),
B_NEG ("B-"),
AB_POS ("AB+"),
AB_NEG ("AB-"),
NO_ANSWER ("NA")
}

entity Address {
addressLine1 String required,
addressLine2 String,
po String,
ps String,
city String required,
state State required,
pin String required
}

enum State {
ANDHRA_PRADESH,
ARUNACHAL_PRADESH,
ASSAM,
BIHAR,
CHHATTISGARH,
GOA,
GUJARAT,
HARYANA,
HIMACHAL_PRADESH,
JAMMU_AND_KASHMIR,
JHARKHAND,
KARNATAKA,
KERALA,
MADHYA_PRADESH,
MAHARASHTRA,
MANIPUR,
MEGHALAYA,
MIZORAM,
NAGALAND,
ODISHA,
PUNJAB,
RAJASTHAN,
SIKKIM,
TAMIL_NADU,
TELANGANA,
TRIPURA,
UTTARAKHAND,
UTTAR_PRADESH,
WEST_BENGAL,
ANDAMAN_AND_NICOBAR_ISLANDS,
CHANDIGARH,
DADRA_AND_NAGAR_HAVELI,
DAMAN_AND_DIU,
DELHI,
LAKSHADWEEP,
PUDUCHERRY
}


entity Exam {	 
	name String required,
    type ExamType required,
    code String,
 	date Instant,
    startTime LocalDate,
    endTime LocalDate
}

enum ExamType{
REGULAR (Regular),
EX_REGULAR (ExRegular)
}

entity ExamApplicationForm {
	regNumber String unique,
    firstName String required,
    middleName String,
    lastName String required,
	dob Instant,
    fatherName String,   
    email String required unique,
    mobileNumber String required,
    nationality String required,
    gender Gender,
    religion String,
    adharNumber String required unique,
    bloodGroup BloodGroup,
    isApproved Boolean,
    catagory String,
    identityType IdentityType required,
    identityNumber String required unique,
    image ImageBlob,
    signature ImageBlob,
    adhar Blob,
    imagePath String,
    signPath String,
    adharPath String
}

enum IdentityType {
ADHAR (Adhar),
PAN_CARD (Pancard),
COLLEGE_ID_CARD (CollegeIDCard)
}
entity SubjectPaper {
	name String required,
    code String,
    type SubjectPaperType,
    fullMark Integer,
    passMark Integer
}
 
enum SubjectPaperType {
PRACTICAL (Practical),
THEORY (Theory),
PROJECT_WORK (ProjectWork)
}

entity ExamCenter {
	name String required,
    code String
} 

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	University to College{university},	 
	College to Course{college},	 
	Course to Branch{course},
    Branch to AcademicBatch{branch},
    AcademicBatch{session} to Session,
    AcademicBatch{student} to Student,
    Session{exam} to Exam,
    Student{examApplicationForm} to ExamApplicationForm{student}
    Exam{applicationForm} to ExamApplicationForm{exam},
    Exam{examCenter} to ExamCenter{exam},
    Session{subjectPaper} to SubjectPaper,
    ExamCenter{examApplicationForm} to ExamApplicationForm{examCenter},
  
}
 
relationship OneToOne {
University{address} to Address,
College{address} to Address,
ExamCenter{address} to Address,

ExamApplicationForm{correspondingAddress} to Address,
Exam{correspondingAddress} to Address,
Exam{permanentAddress} to Address,
}

service all with serviceImpl
dto * with mapstruct
paginate Student, ExamApplicationForm, SubjectPaper, Exam, College, Course, Branch, AcademicBatch   with pagination

